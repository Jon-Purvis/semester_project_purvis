ggplot(merged_data, aes(x = type, y = early_career_pay, fill = type)) +
geom_violin() +
labs(title = "Early Career Pay Comparison: Public vs. Private Schools", x = "School Type", y = "Early Career Pay") +
scale_fill_manual(values = c("Public" = "blue", "Private" = "red")) +
theme_minimal()
library(ggbeeswarm)
ggplot(merged_data, aes(x = type, y = early_career_pay, color = type)) +
geom_beeswarm() +
labs(title = "Early Career Pay Comparison: Public vs. Private Schools", x = "School Type", y = "Early Career Pay") +
scale_color_manual(values = c("Public" = "blue", "Private" = "red")) +
theme_minimal()
merged_data
# Merge the datasets based on the school name
merged_data <- left_join(tuition_cost, salary_potential, by = "name")
# Filter the merged data to remove missing values
merged_data <- merged_data %>%
filter(!is.na(early_career_pay))
# Create a box plot to compare early career pay for public and private schools
ggplot(merged_data, aes(x = type, y = early_career_pay, fill = type)) +
geom_boxplot() +
labs(title = "Early Career Pay Comparison: Public vs. Private Schools", x = "School Type", y = "Early Career Pay") +
scale_fill_manual(values = c("Public" = "blue", "Private" = "red")) +
scale_y_continuous(labels = scales::comma)   # Format y-axis labels
ggplot(merged_data, aes(x = type, y = early_career_pay, fill = type)) +
geom_violin() +
labs(title = "Early Career Pay Comparison: Public vs. Private Schools", x = "School Type", y = "Early Career Pay") +
scale_fill_manual(values = c("Public" = "blue", "Private" = "red")) +
theme_minimal()
library(ggbeeswarm)
ggplot(merged_data, aes(x = type, y = early_career_pay, color = type)) +
geom_beeswarm() +
labs(title = "Early Career Pay Comparison: Public vs. Private Schools", x = "School Type", y = "Early Career Pay") +
scale_color_manual(values = c("Public" = "blue", "Private" = "red")) +
theme_minimal()
merged_data
# Load the necessary libraries
library(ggplot2)
# Example 1: Bar Plot of School Types
ggplot(tuition_cost, aes(x = type)) +
geom_bar() +
labs(title = "Distribution of School Types", x = "School Type", y = "Count")
# Example 2: Histogram of Tuition Costs
ggplot(tuition_cost, aes(x = in_state_tuition)) +
geom_histogram(binwidth = 100) +
labs(title = "Histogram of In-State Tuition Costs", x = "Tuition Cost", y = "Frequency")
# Example 3: Box Plot of Net Costs by Income Level
ggplot(tuition_income, aes(x = income_lvl, y = net_cost)) +
geom_boxplot() +
labs(title = "Box Plot of Net Costs by Income Level", x = "Income Level", y = "Net Cost")
# Example 4: Scatter Plot of Early Career Pay vs. Mid Career Pay
ggplot(salary_potential, aes(x = early_career_pay, y = mid_career_pay)) +
geom_point() +
labs(title = "Scatter Plot of Early vs. Mid Career Pay", x = "Early Career Pay", y = "Mid Career Pay")
# Example 5: Time Series Plot of Historical Tuition Costs
ggplot(historical_tuition, aes(x = year, y = tuition_cost, color = type)) +
geom_line() +
labs(title = "Tuition Costs Over Time", x = "Year", y = "Tuition Cost") +
facet_wrap(~ type) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))  # Rotate labels 90 degrees and align to the right
# Example 6: Bar Plot of Total Enrollment by Category
ggplot(diversity_school, aes(x = category, y = total_enrollment)) +
geom_bar(stat = "identity") +
labs(title = "Total Enrollment by Category", x = "Category", y = "Total Enrollment")
# Example 7: Heatmap of Correlations
correlation_matrix <- cor(salary_potential[, c("early_career_pay", "mid_career_pay", "make_world_better_percent", "stem_percent")])
ggplot(data = as.data.frame(as.table(correlation_matrix)), aes(Var1, Var2, fill = Freq)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "blue") +
labs(title = "Correlation Heatmap")
# Example 8: Stacked Bar Plot of Income Levels
ggplot(tuition_income, aes(x = year, fill = income_lvl)) +
geom_bar() +
labs(title = "Income Levels Over Time", x = "Year", y = "Count") +
theme(legend.position = "top")
# Load the necessary libraries
library(ggplot2)
# Example 1: Bar Plot of School Types
ggplot(tuition_cost, aes(x = type)) +
geom_bar() +
labs(title = "Distribution of School Types", x = "School Type", y = "Count")
# Example 2: Histogram of Tuition Costs
ggplot(tuition_cost, aes(x = in_state_tuition)) +
geom_histogram(binwidth = 100) +
labs(title = "Histogram of In-State Tuition Costs", x = "Tuition Cost", y = "Frequency")
# Example 3: Box Plot of Net Costs by Income Level
ggplot(tuition_income, aes(x = income_lvl, y = net_cost)) +
geom_boxplot() +
labs(title = "Box Plot of Net Costs by Income Level", x = "Income Level", y = "Net Cost")
# Example 4: Scatter Plot of Early Career Pay vs. Mid Career Pay
ggplot(salary_potential, aes(x = early_career_pay, y = mid_career_pay)) +
geom_point() +
labs(title = "Scatter Plot of Early vs. Mid Career Pay", x = "Early Career Pay", y = "Mid Career Pay")
# Example 5: Time Series Plot of Historical Tuition Costs
ggplot(historical_tuition, aes(x = year, y = tuition_cost, color = type)) +
geom_line() +
labs(title = "Tuition Costs Over Time", x = "Year", y = "Tuition Cost") +
facet_wrap(~ type)
# Example 6: Bar Plot of Total Enrollment by Category
ggplot(diversity_school, aes(x = category, y = total_enrollment)) +
geom_bar(stat = "identity") +
labs(title = "Total Enrollment by Category", x = "Category", y = "Total Enrollment")
# Example 7: Heatmap of Correlations
correlation_matrix <- cor(salary_potential[, c("early_career_pay", "mid_career_pay", "make_world_better_percent", "stem_percent")])
ggplot(data = as.data.frame(as.table(correlation_matrix)), aes(Var1, Var2, fill = Freq)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "blue") +
labs(title = "Correlation Heatmap")
# Example 8: Stacked Bar Plot of Income Levels
ggplot(tuition_income, aes(x = year, fill = income_lvl)) +
geom_bar() +
labs(title = "Income Levels Over Time", x = "Year", y = "Count") +
theme(legend.position = "top")
# Load the necessary libraries
library(ggplot2)
# Example 1: Bar Plot of School Types
ggplot(tuition_cost, aes(x = type)) +
geom_bar() +
labs(title = "Distribution of School Types", x = "School Type", y = "Count")
# Example 2: Histogram of Tuition Costs
ggplot(tuition_cost, aes(x = in_state_tuition)) +
geom_histogram(binwidth = 100) +
labs(title = "Histogram of In-State Tuition Costs", x = "Tuition Cost", y = "Frequency")
# Example 3: Box Plot of Net Costs by Income Level
ggplot(tuition_income, aes(x = income_lvl, y = net_cost)) +
geom_boxplot() +
labs(title = "Box Plot of Net Costs by Income Level", x = "Income Level", y = "Net Cost")
# Example 4: Scatter Plot of Early Career Pay vs. Mid Career Pay
ggplot(salary_potential, aes(x = early_career_pay, y = mid_career_pay)) +
geom_point() +
labs(title = "Scatter Plot of Early vs. Mid Career Pay", x = "Early Career Pay", y = "Mid Career Pay")
# Example 5: Time Series Plot of Historical Tuition Costs
ggplot(historical_tuition, aes(x = year, y = tuition_cost, color = type)) +
geom_line() +
labs(title = "Tuition Costs Over Time", x = "Year", y = "Tuition Cost") +
facet_wrap(~ type) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))  # Rotate labels 90 degrees and align to the right
# Example 6: Bar Plot of Total Enrollment by Category
ggplot(diversity_school, aes(x = category, y = total_enrollment)) +
geom_bar(stat = "identity") +
labs(title = "Total Enrollment by Category", x = "Category", y = "Total Enrollment")
# Example 7: Heatmap of Correlations
correlation_matrix <- cor(salary_potential[, c("early_career_pay", "mid_career_pay", "make_world_better_percent", "stem_percent")])
ggplot(data = as.data.frame(as.table(correlation_matrix)), aes(Var1, Var2, fill = Freq)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "blue") +
labs(title = "Correlation Heatmap")
# Example 8: Stacked Bar Plot of Income Levels
ggplot(tuition_income, aes(x = year, fill = income_lvl)) +
geom_bar() +
labs(title = "Income Levels Over Time", x = "Year", y = "Count") +
theme(legend.position = "top")
# Load the necessary libraries
library(ggplot2)
# Example 1: Bar Plot of School Types
ggplot(tuition_cost, aes(x = type)) +
geom_bar() +
labs(title = "Distribution of School Types", x = "School Type", y = "Count")
# Example 2: Histogram of Tuition Costs
ggplot(tuition_cost, aes(x = in_state_tuition)) +
geom_histogram(binwidth = 100) +
labs(title = "Histogram of In-State Tuition Costs", x = "Tuition Cost", y = "Frequency")
# Example 3: Box Plot of Net Costs by Income Level
ggplot(tuition_income, aes(x = income_lvl, y = net_cost)) +
geom_boxplot() +
labs(title = "Box Plot of Net Costs by Income Level", x = "Income Level", y = "Net Cost")
# Example 4: Scatter Plot of Early Career Pay vs. Mid Career Pay
ggplot(salary_potential, aes(x = early_career_pay, y = mid_career_pay)) +
geom_point() +
labs(title = "Scatter Plot of Early vs. Mid Career Pay", x = "Early Career Pay", y = "Mid Career Pay")
# Example 5: Time Series Plot of Historical Tuition Costs
ggplot(historical_tuition, aes(x = year, y = tuition_cost, color = type)) +
geom_line() +
labs(title = "Tuition Costs Over Time", x = "Year", y = "Tuition Cost") +
facet_wrap(~ type) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))  # Rotate labels 90 degrees and align to the right
# Example 6: Bar Plot of Total Enrollment by Category
ggplot(diversity_school, aes(x = category, y = total_enrollment)) +
geom_bar(stat = "identity") +
labs(title = "Total Enrollment by Category", x = "Category", y = "Total Enrollment")
# Example 7: Heatmap of Correlations
correlation_matrix <- cor(salary_potential[, c("early_career_pay", "mid_career_pay", "make_world_better_percent", "stem_percent")])
ggplot(data = as.data.frame(as.table(correlation_matrix)), aes(Var1, Var2, fill = Freq)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "blue") +
labs(title = "Correlation Heatmap")
# Example 8: Stacked Bar Plot of Income Levels
ggplot(tuition_income, aes(x = year, fill = income_lvl)) +
geom_bar() +
labs(title = "Income Levels Over Time", x = "Year", y = "Count") +
theme(legend.position = "top")
# Load the necessary libraries
library(ggplot2)
# Example 1: Bar Plot of School Types
ggplot(tuition_cost, aes(x = type)) +
geom_bar() +
labs(title = "Distribution of School Types", x = "School Type", y = "Count")
# Example 2: Histogram of Tuition Costs
ggplot(tuition_cost, aes(x = in_state_tuition)) +
geom_histogram(binwidth = 100) +
labs(title = "Histogram of In-State Tuition Costs", x = "Tuition Cost", y = "Frequency")
# Example 3: Box Plot of Net Costs by Income Level
ggplot(tuition_income, aes(x = income_lvl, y = net_cost)) +
geom_boxplot() +
labs(title = "Box Plot of Net Costs by Income Level", x = "Income Level", y = "Net Cost")
# Example 4: Scatter Plot of Early Career Pay vs. Mid Career Pay
ggplot(salary_potential, aes(x = early_career_pay, y = mid_career_pay)) +
geom_point() +
labs(title = "Scatter Plot of Early vs. Mid Career Pay", x = "Early Career Pay", y = "Mid Career Pay")
# Example 5: Time Series Plot of Historical Tuition Costs
ggplot(historical_tuition, aes(x = year, y = tuition_cost, color = type)) +
geom_line() +
labs(title = "Tuition Costs Over Time", x = "Year", y = "Tuition Cost") +
facet_wrap(~ type) +
coord_flip()
# Example 6: Bar Plot of Total Enrollment by Category
ggplot(diversity_school, aes(x = category, y = total_enrollment)) +
geom_bar(stat = "identity") +
labs(title = "Total Enrollment by Category", x = "Category", y = "Total Enrollment")
# Example 7: Heatmap of Correlations
correlation_matrix <- cor(salary_potential[, c("early_career_pay", "mid_career_pay", "make_world_better_percent", "stem_percent")])
ggplot(data = as.data.frame(as.table(correlation_matrix)), aes(Var1, Var2, fill = Freq)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "blue") +
labs(title = "Correlation Heatmap")
# Example 8: Stacked Bar Plot of Income Levels
ggplot(tuition_income, aes(x = year, fill = income_lvl)) +
geom_bar() +
labs(title = "Income Levels Over Time", x = "Year", y = "Count") +
theme(legend.position = "top")
# load packages
library(tidyverse) # wrangling, plots etc.
library(GGally) # paired plots
library(skimr) # data summary
library(patchwork) # for combining plots
library(RColorBrewer) # for plot colors
# set plot theme
theme_set(theme_minimal(base_size = 12))
tuition_cost <- read_csv("data/tuition_cost.csv")
# load packages
library(tidyverse) # wrangling, plots etc.
library(GGally) # paired plots
library(skimr) # data summary
library(patchwork) # for combining plots
library(RColorBrewer) # for plot colors
# set plot theme
theme_set(theme_minimal(base_size = 12))
tuition_cost <- read_csv("data/tuition_cost.csv")
getwd()
# load packages
library(tidyverse) # wrangling, plots etc.
library(GGally) # paired plots
library(skimr) # data summary
library(patchwork) # for combining plots
library(RColorBrewer) # for plot colors
# set plot theme
theme_set(theme_minimal(base_size = 12))
tuition_cost <- read_csv("data/tuition_cost.csv")
getwd()
# load packages
library(tidyverse) # wrangling, plots etc.
library(GGally) # paired plots
library(skimr) # data summary
library(patchwork) # for combining plots
library(RColorBrewer) # for plot colors
# set plot theme
theme_set(theme_minimal(base_size = 12))
tuition_cost <- read_csv("data/tuition_cost.csv")
# Group data by state and calculate the average total price and average pay
state_avg_data <- combined_data %>%
group_by(state_name) %>%
summarize(avg_total_price = mean(total_price),
avg_avg_pay = mean(avg_pay))
#| message: false
# load packages
library(tidyverse) # wrangling, plots etc.
library(GGally) # paired plots
library(skimr) # data summary
library(patchwork) # for combining plots
library(RColorBrewer) # for plot colors
library(sf)
library(stringr)
library(dplyr)
library(plotly)
# set plot theme
theme_set(theme_minimal(base_size = 12))
tuition_cost <- read_csv("../data/tuition_cost.csv")
tuition_income <- read_csv("../data/tuition_income.csv")
salary_potential <- read_csv("../data/salary_potential.csv")
historical_tuition <- read_csv("../data/historical_tuition.csv")
diversity_school <- read_csv("../data/diversity_school.csv")
states_df <- map_data("state")
tuition_cost
tuition_income
salary_potential
historical_tuition
diversity_school
# Calculate the average early career salary by state
average_early_career_pay <- salary_potential %>%
group_by(state_name) %>%
summarize(avg_early_career_pay = mean(early_career_pay, na.rm = TRUE))
# Calculate the average early career salary by state
average_mid_career_pay <- salary_potential %>%
group_by(state_name) %>%
summarize(avg_mid_career_pay = mean(mid_career_pay, na.rm = TRUE))
# Create a bar plot
avg_early_pay_plot <- ggplot(average_early_career_pay, aes(x = state_name, y = avg_early_career_pay)) +
geom_bar(stat = "identity", fill = "lightblue") +
labs(title = "Average Early Career Salaries by State", x = "State", y = "Average Early Career Salary") +
theme_minimal() +
coord_flip()
# Create a bar plot
avg_mid_pay_plot <- ggplot(average_mid_career_pay, aes(x = state_name, y = avg_mid_career_pay)) +
geom_bar(stat = "identity", fill = "lightblue") +
labs(title = "Average Mid Career Salaries by State", x = "State", y = "Average Mid Career Salary") +
theme_minimal() +
coord_flip()
avg_early_pay_plot
avg_mid_pay_plot
# Standardize state names
states_df <- states_df %>%
mutate(region = tolower(gsub("[_ ]", "", region)))
salary_potential_cleaned <- salary_potential %>%
mutate(state_name = tolower(gsub("[_ ]", "", state_name))) %>%
mutate(state_name = gsub("-", "", state_name))
# Left join the data sets, keeping all state boundaries
merged_data <- left_join(states_df, salary_potential_cleaned, by = c("region" = "state_name"))
# Create the choropleth map
entry_pay_chloropleth <-merged_data %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = early_career_pay), color = "darkgray") +
scale_fill_gradient(low = "lightblue", high = "darkblue", labels = scales::comma) +  # Use the 'comma' function
labs(title = "Early Career Pay by State", fill = "Early Career Pay") +
theme_minimal()
mid_pay_chloropleth <- merged_data %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = mid_career_pay), color = "darkgray") +
scale_fill_gradient(low = "lightblue", high = "darkblue", labels = scales::comma) +  # Use the 'comma' function
labs(title = "Mid Career Pay by State", fill = "Mid Career Pay") +
theme_minimal()
entry_pay_chloropleth
mid_pay_chloropleth
# Sort the data frame to find the top ten states with the highest average early career salaries
top_ten_early <- head(arrange(average_early_career_pay, desc(avg_early_career_pay)), 10)
# Sort the data frame to find the top ten states with the highest average mid career salaries
top_ten_mid <- head(arrange(average_mid_career_pay, desc(avg_mid_career_pay)), 10)
# Create a bar plot for the top ten early career salaries
top_ten_early_plot <- top_ten_early %>%
ggplot(aes(x = reorder(state_name, avg_early_career_pay), y = avg_early_career_pay)) +
geom_bar(stat = "identity", fill = "lightblue") +
labs(title = "Top Ten States with Highest Average Early Career Salaries",
x = "State", y = "Average Early Career Salary") +
theme_minimal() +
coord_flip()
# Create a bar plot for the top ten mid career salaries
top_ten_mid_plot <- top_ten_mid %>%
ggplot(aes(x = reorder(state_name, avg_mid_career_pay), y = avg_mid_career_pay)) +
geom_bar(stat = "identity", fill = "lightblue") +
labs(title = "Top Ten States with Highest Average Mid Career Salaries",
x = "State", y = "Average Mid Career Salary") +
theme_minimal() +
coord_flip()
top_ten_early_plot
top_ten_mid_plot
# Sort the data frame to find the worst ten states with the lowest average early career salaries
worst_ten_early <- head(arrange(average_early_career_pay, avg_early_career_pay), 10)
# Sort the data frame to find the worst ten states with the lowest average mid career salaries
worst_ten_mid <- head(arrange(average_mid_career_pay, avg_mid_career_pay), 10)
# Create a bar plot for the worst ten early career salaries
worst_ten_early_plot <- worst_ten_early %>%
ggplot(aes(x = reorder(state_name, -avg_early_career_pay), y = avg_early_career_pay)) +
geom_bar(stat = "identity", fill = "lightpink") +
labs(title = "Worst Ten States with Lowest Average Early Career Salaries",
x = "State", y = "Average Early Career Salary") +
theme_minimal() +
coord_flip()
# Create a bar plot for the worst ten mid career salaries
worst_ten_mid_plot <- worst_ten_mid %>%
ggplot(aes(x = reorder(state_name, -avg_mid_career_pay), y = avg_mid_career_pay)) +
geom_bar(stat = "identity", fill = "lightpink") +
labs(title = "Worst Ten States with Lowest Average Mid Career Salaries",
x = "State", y = "Average Mid Career Salary") +
theme_minimal() +
coord_flip()
worst_ten_early_plot
worst_ten_mid_plot
# Calculate the average early career salary and mid career salary by state
average_salaries <- salary_potential %>%
group_by(state_name) %>%
summarize(
avg_early_career_pay = mean(early_career_pay, na.rm = TRUE),
avg_mid_career_pay = mean(mid_career_pay, na.rm = TRUE)
) %>%
mutate(avg_pay = (avg_early_career_pay + avg_mid_career_pay) / 2)
# Define a mapping between state abbreviations and full state names
state_mapping <- data.frame(
state_abbrev = c("AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY"),
state_name = c("Alabama", "Alaska", "Arizona", "Arkansas", "California", "Colorado", "Connecticut", "Delaware", "Florida", "Georgia", "Hawaii", "Idaho", "Illinois", "Indiana", "Iowa", "Kansas", "Kentucky", "Louisiana", "Maine", "Maryland", "Massachusetts", "Michigan", "Minnesota", "Mississippi", "Missouri", "Montana", "Nebraska", "Nevada", "New-Hampshire", "New-Jersey", "New-Mexico", "New-York", "North-Carolina", "North-Dakota", "Ohio", "Oklahoma", "Oregon", "Pennsylvania", "Rhode-Island", "South-Carolina", "South-Dakota", "Tennessee", "Texas", "Utah", "Vermont", "Virginia", "Washington", "West-Virginia", "Wisconsin", "Wyoming")
)
# Merge the state_mapping with school_data to get full state names
tuition_income_cleaned <- tuition_income %>%
left_join(state_mapping, by = c("state" = "state_abbrev"))
# Merge the tuition_income_cleaned and average_salaries data frames by the "state_name" column
combined_data <- tuition_income_cleaned %>%
inner_join(average_salaries, by = "state_name")
# Check data set
combined_data
# Group data by state and calculate the average total price and average pay
state_avg_data <- combined_data %>%
group_by(state_name) %>%
summarize(avg_total_price = mean(total_price),
avg_avg_pay = mean(avg_pay))
# Create a scatter plot of average net cost vs. average pay by state
state_avg_plot <- state_avg_data %>%
ggplot(aes(x = avg_total_price, y = avg_avg_pay, text = state_name)) +
geom_point(aes(color = state_name), size = 3) +
labs(title = "Average Total Price Vs. Average Pay by State",
x = "Average Total Price",
y = "Average Pay") +
theme_minimal() +
scale_color_discrete(guide = none)  # Remove legend for state names
# Convert ggplot to a plotly object and customize the tooltip labels
state_avg_plotly <- ggplotly(state_avg_plot, tooltip = "text", name = "")
# Group data by state and calculate the average total price and average pay
state_avg_data <- combined_data %>%
group_by(state_name) %>%
summarize(avg_total_price = mean(total_price),
avg_avg_pay = mean(avg_pay))
# Create a scatter plot of average net cost vs. average pay by state
state_avg_plot <- state_avg_data %>%
ggplot(aes(x = avg_total_price, y = avg_avg_pay, text = state_name)) +
geom_point(aes(color = state_name), size = 3) +
labs(title = "Average Total Price Vs. Average Pay by State",
x = "Average Total Price",
y = "Average Pay") +
theme_minimal() +
scale_color_discrete(guide = none)  # Remove legend for state names
# Convert ggplot to a plotly object and customize the tooltip labels
state_avg_plotly <- ggplotly(state_avg_plot, tooltip = "text", name = "")
# Group data by state and calculate the average net cost and average pay
state_avg_data2 <- combined_data %>%
group_by(state_name) %>%
summarize(avg_net_cost = mean(net_cost),
avg_avg_pay = mean(avg_pay))
# Create a scatter plot of average net cost vs. average pay by state
state_avg_plot <- state_avg_data2 %>%
ggplot(aes(x = avg_net_cost, y = avg_avg_pay, text = state_name)) +
geom_point(aes(color = state_name), size = 3) +
labs(title = "Average Net Cost Vs. Average Pay by State",
x = "Average Net Cost",
y = "Average Pay") +
theme_minimal() +
scale_color_discrete(guide = FALSE)  # Remove legend for state names
# Convert ggplot to a plotly object and customize the tooltip labels
state_avg_plotly <- ggplotly(state_avg_plot, tooltip = "text", name = "")
# Print the interactive plot
print(state_avg_plotly)
state_avg_data
state_avg_data2
# Group data by state and calculate the average net cost and average pay
state_avg_data2 <- combined_data %>%
group_by(state_name) %>%
summarize(avg_net_cost = mean(net_cost),
avg_avg_pay = mean(avg_pay))
# Create a scatter plot of average net cost vs. average pay by state
state_avg_plot <- state_avg_data2 %>%
ggplot(aes(x = avg_net_cost, y = avg_avg_pay, text = state_name)) +
geom_point(aes(color = state_name), size = 3) +
labs(title = "Average Net Cost Vs. Average Pay by State",
x = "Average Net Cost",
y = "Average Pay") +
theme_minimal() +
scale_color_discrete(guide = none)  # Remove legend for state names
# Convert ggplot to a plotly object and customize the tooltip labels
state_avg_plotly <- ggplotly(state_avg_plot, tooltip = "text", name = "")
# Group data by state and calculate the average total price and average pay
state_avg_data <- combined_data %>%
group_by(state_name) %>%
summarize(avg_total_price = mean(total_price),
avg_avg_pay = mean(avg_pay))
# Create a scatter plot of average net cost vs. average pay by state
state_avg_plot <- state_avg_data %>%
ggplot(aes(x = avg_total_price, y = avg_avg_pay, text = state_name)) +
geom_point(aes(color = state_name), size = 3) +
labs(title = "Average Total Price Vs. Average Pay by State",
x = "Average Total Price",
y = "Average Pay") +
theme_minimal() +
scale_color_discrete(guide = FALSE)  # Remove legend for state names
# Convert ggplot to a plotly object and customize the tooltip labels
state_avg_plotly <- ggplotly(state_avg_plot, tooltip = "text", name = "")
# Print the interactive plot
print(state_avg_plotly)
# Group data by state and calculate the average net cost and average pay
state_avg_data2 <- combined_data %>%
group_by(state_name) %>%
summarize(avg_net_cost = mean(net_cost),
avg_avg_pay = mean(avg_pay))
# Create a scatter plot of average net cost vs. average pay by state
state_avg_plot <- state_avg_data2 %>%
ggplot(aes(x = avg_net_cost, y = avg_avg_pay, text = state_name)) +
geom_point(aes(color = state_name), size = 3) +
labs(title = "Average Net Cost Vs. Average Pay by State",
x = "Average Net Cost",
y = "Average Pay") +
theme_minimal() +
scale_color_discrete(guide = FALSE)  # Remove legend for state names
# Convert ggplot to a plotly object and customize the tooltip labels
state_avg_plotly <- ggplotly(state_avg_plot, tooltip = "text", name = "")
# Print the interactive plot
print(state_avg_plotly)
state_avg_data
state_avg_data2
